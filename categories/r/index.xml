<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>R | CARLVIN | BEYOND RAW DATA</title>
    <link>/categories/r/</link>
      <atom:link href="/categories/r/index.xml" rel="self" type="application/rss+xml" />
    <description>R</description>
    <generator>Source Themes Academic (https://sourcethemes.com/academic/)</generator><language>en-us</language><copyright>© Carlvin M, 2019</copyright><lastBuildDate>Fri, 25 Jan 2019 00:00:00 +0000</lastBuildDate>
    <image>
      <url>/img/Rplot</url>
      <title>R</title>
      <link>/categories/r/</link>
    </image>
    
    <item>
      <title>Data Mining In R</title>
      <link>/post/data-mining/2019-01-25-r-data-mining-rmd/</link>
      <pubDate>Fri, 25 Jan 2019 00:00:00 +0000</pubDate>
      <guid>/post/data-mining/2019-01-25-r-data-mining-rmd/</guid>
      <description>


&lt;div id=&#34;PartI&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Part I&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;This first section assumes you have no knowledge in building a twitter app to be used for fetching data. You can skip directly to &lt;a href=&#34;#PartII&#34;&gt;the second section here&lt;/a&gt; if you are able to build your own twitter app and get the required authentication keys.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/div&gt;
&lt;div id=&#34;introduction&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Introduction:&lt;/h1&gt;
&lt;p&gt;Social media usage has grown rapidly over the past few decades. Most social networks we can think of now are so well established, making them a platform where people can not only talk to one another but also be able to come forward with different views and interests they would like to express. With an almost constant rate of increasing users each day, social networks such as Facebook and Twitter have become great sources of data which can be used in the broad field of Data Science:Talk of (those pretty annoying) targeted ads for example…&lt;/p&gt;
&lt;center&gt;
&lt;img src=&#34;https://media.giphy.com/media/3o6Mbmg6AchRmB4ylO/giphy.gif&#34; alt=&#34;Gif: They just keep coming!!&#34; /&gt;
&lt;center&gt;
&lt;p&gt;&lt;br&gt;&lt;/p&gt;
&lt;p&gt;With the help of APIs, we are easily able to get data from such platforms to be used for further analysis. In this article we will go through the first step of text mining in R using data fetched from Twitter. The main advantage of these APIs is that the data we will fetch comes in a well-structured format which makes our work easier when crunching. In this case we will use the readily available Twitter API and create our own Twitter app that will then help in fetching the data. The following steps will accomplish the task…&lt;/p&gt;
&lt;p&gt;&lt;br&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;creating-a-twitter-app&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Creating a Twitter app&lt;/h1&gt;
&lt;p&gt;To create a twitter app we can use for fetching metadata, we first need to have a Twitter account. We then need to go to the &lt;strong&gt;twitter dev site&lt;/strong&gt; &lt;a href=&#34;https://developer.twitter.com/&#34; class=&#34;uri&#34;&gt;https://developer.twitter.com/&lt;/a&gt; and log in with our user account.
On the top right corner should be a drop down menu next to your username, go to APPS. At this point if you are doing this for the first time your Apps section should be blank. Click on “Create an app” to… create an app.&lt;/p&gt;
&lt;center&gt;
&lt;img src=&#34;https://github.com/CarlvinJerry/carlvinjerry.github.io/blob/master/post/MyImages/apps.PNG?raw=true&#34; alt=&#34;Figure 1: App login&#34; /&gt;
&lt;/center&gt;
&lt;p&gt;&lt;br&gt;&lt;/p&gt;
&lt;p&gt;We then have to fill in the form below appropriately. Here is a breakdown of what’s required:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Name:&lt;/strong&gt;
Give your app a unique name of your choice, e.g &lt;strong&gt;UniqueName&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Description:&lt;/strong&gt;
This can always be changed later, use this to provide a brief note on what your app is all about to be able to distinguish it from other apps you might create in future.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Website:&lt;/strong&gt;
This should be your application’s home page web site. It is however not applicable for most personal apps. Anything goes here e.g &lt;a href=&#34;https://carlvinjerry.github.io&#34; class=&#34;uri&#34;&gt;https://carlvinjerry.github.io&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Callback URL:&lt;/strong&gt;
I would ignore the Callback URL field. If you are allowing users to log into your app to authenticate themselves, you’d enter the URL where they would be returned after they’ve given permission to Twitter to use your app.&lt;/li&gt;
&lt;/ul&gt;
&lt;center&gt;
&lt;img src=&#34;https://github.com/CarlvinJerry/CarlvinJerry.github.io/blob/master/post/MyImages/apps2.PNG?raw=true&#34; alt=&#34;Figure 2: Create an app&#34; /&gt;
&lt;/center&gt;
&lt;p&gt;&lt;br&gt;&lt;/p&gt;
&lt;p&gt;The remaining fields should be quite straight forward but must be filled. Click “Create” once done and there you have your first twitter app.
On your app is a menu with &lt;strong&gt;Keys and tokens&lt;/strong&gt;. These are the most important components since we will need them to access data from the APIs.Generate both consumer and access tokens (if not readily available) and take note of them. &lt;strong&gt;NB:&lt;/strong&gt; &lt;strong&gt;These keys are meant for your eyes only!&lt;/strong&gt;&lt;/p&gt;
&lt;center&gt;
&lt;img src=&#34;https://github.com/CarlvinJerry/CarlvinJerry.github.io/blob/master/post/MyImages/keys.PNG?raw=true&#34; alt=&#34;Figure 3: API Keys&#34; /&gt;
&lt;/center&gt;
&lt;p&gt;&lt;br&gt;&lt;/p&gt;
&lt;p&gt;The final bit of setting up our twitter app is granting access permissions. We will mostly do fine with the &lt;strong&gt;read-only&lt;/strong&gt; if all we need is to fetch data but it can always be changed later.&lt;/p&gt;
&lt;center&gt;
&lt;img src=&#34;https://github.com/CarlvinJerry/CarlvinJerry.github.io/blob/master/post/MyImages/permisions.PNG?raw=true&#34; alt=&#34;Figure 4: Permissions&#34; /&gt;
&lt;/center&gt;
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;p&gt;Now we can move on to the next step where we set up &lt;strong&gt;R&lt;/strong&gt; to query data from Twitter.&lt;/p&gt;
&lt;p&gt;&lt;br&gt;&lt;/p&gt;
&lt;hr /&gt;
&lt;hr /&gt;
&lt;p&gt;&lt;br&gt;&lt;/p&gt;
&lt;div id=&#34;PartII&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Part II&lt;/h2&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;setting-up-r-to-fetch-twitter-data&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Setting up R to fetch twitter data&lt;/h1&gt;
&lt;p&gt;With our twitter app set up &lt;a href=&#34;#PartI&#34;&gt;in part I above&lt;/a&gt; and we are able to get the authentication keys for the API, we can now easily fetch data from twitter in R. The following steps will help us do this:&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;prerequisites&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Prerequisites:&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Twitter API Keys:&lt;/strong&gt; At this point we already have our twitter app with the required API keys.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;R and an IDE of choice:&lt;/strong&gt; We also need to have R installed, advisably the latest version. Microsoft’s &lt;a href=&#34;https://mran.microsoft.com/open&#34;&gt;&lt;strong&gt;enhanced R distribution&lt;/strong&gt;&lt;/a&gt; is recommended over the
&lt;a href=&#34;https://cran.r-project.org/bin/windows/base/&#34;&gt;&lt;strong&gt;base R&lt;/strong&gt;&lt;/a&gt; but for this specific task either can do just fine. I would recommend &lt;a href=&#34;https://www.rstudio.com/products/rstudio/download/&#34;&gt;&lt;strong&gt;R STUDIO&lt;/strong&gt;&lt;/a&gt; for an &lt;strong&gt;IDE&lt;/strong&gt;. One obvious advantage of all these is that they’re open-source tools.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;br&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;install-and-load-the-required-packages-in-r&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;1.Install and Load the required packages in R&lt;/h1&gt;
&lt;p&gt;R has a standard set of packages, each with different tasks. You can find some packages for download&lt;br /&gt;
&lt;a href=&#34;https://cran.cnr.berkeley.edu/&#34;&gt;&lt;strong&gt;here&lt;/strong&gt;&lt;/a&gt;. The code chunk below installs and loads the specific packages we need for this task. Take note of comments at each line of code, initiated by an octothorp.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;#Install packages
install.packages(&amp;quot;twitteR&amp;quot;)#------Extracts data from twitter
install.packages(&amp;quot;httr&amp;quot;)#--------Tools for Working with URLs and HTTP&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;#We can now load the two packages 
library(&amp;quot;twitteR&amp;quot;)
require(&amp;quot;httr&amp;quot;)#-------------Both require() and library() can be used to call an installed package&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;br&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;NB:&lt;/strong&gt; Windows users might need to download a certification file and store it in the working directory. This certificate file initiates a handshake between R and the Twitter API.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# Download &amp;quot;cacert.pem&amp;quot; file
download.file(url=&amp;quot;https://curl.haxx.se/ca/cacert.pem&amp;quot;,destfile=&amp;quot;cacert.pem&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;create-and-store-objects-containing-the-twitter-authenticated-credentials&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;2.Create and store objects containing the twitter authenticated credentials&lt;/h1&gt;
&lt;p&gt;This is where we invoke the twitter API using the credentials from our app and query the data we need.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# Authentication keys
consumer_key &amp;lt;- &amp;#39;hjksdha08097afnjhaa90uaf&amp;#39;
consumer_secret &amp;lt;- &amp;#39;hjksdha08097afnjhaa90uaf&amp;#39;
access_token &amp;lt;- &amp;#39;hjksdha08097afnjhaa90uaf&amp;#39;
access_secret &amp;lt;- &amp;#39;hjksdha08097afnjhaa90uaf&amp;#39;

#The above tokens are what we made the twitter app for.
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;query-data-from-twitter&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;3.Query data from twitter&lt;/h1&gt;
&lt;p&gt;We can now go ahead and fetch our data. Due to limitations on the twitter standard apps, it is advisable to store your data in R locally. This will reduce the number of times you have to make requests to twitter to fetch data. You will therefore do much more with your app that way regardless of the limitations- Or you can as well buy the premium app. In my example below, I am fetching data for a user on twitter called &lt;span class=&#34;citation&#34;&gt;@UKenyatta&lt;/span&gt;.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;#Connect to Twitter 
setup_twitter_oauth(consumer_key, consumer_secret, access_token, access_secret)
tweets &amp;lt;- userTimeline(&amp;quot;UKenyatta&amp;quot;, n=3200) #Standard twitter apps are limited to 3200 tweets per                                                  #download session. This could come out less depending on
                                            #the app

#create a data frame of the tweets
UKenyatta_Tweets &amp;lt;- tbl_df(map_df(tweets, as.data.frame))

# Save tweets for later (and note when saved):
save(UKenyatta_Tweets, file=&amp;quot;UKenyatta_Tweets.RData&amp;quot;)

# You can then access them later at will...
# load(&amp;quot;UKenyatta_Tweets.RData&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;You can now manipulate your data and see what you find out.&lt;/p&gt;
&lt;center&gt;
&lt;img src=&#34;https://media.giphy.com/media/ZtMkorgeyRu5q/giphy.gif&#34; alt=&#34;Happy crunching!!&#34; /&gt;
&lt;/center&gt;
&lt;p&gt;&lt;br&gt;&lt;/p&gt;
&lt;center&gt;
&lt;img src=&#34;https://fontmeme.com/permalink/190129/8b378e9ce35b7a28dd150c4f1d656807.png&#34; /&gt;
&lt;/center&gt;
&lt;p&gt;&lt;br&gt;&lt;/p&gt;
&lt;/div&gt;
</description>
    </item>
    
  </channel>
</rss>
